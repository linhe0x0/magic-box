upstream APPNAME_upstream {
  server 127.0.0.1:3000;
}

# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# Force redirect http to https.
server {
  listen       80;
  listen       [::]:80;
  server_name  APP_DOMAIN;
  return       301 https://$host$request_uri;
}

# Redirect www subdomain.
server {
  listen       80;
  listen       [::]:80;
  server_name  www.APP_DOMAIN;
  return       301 https://APP_DOMAIN$request_uri;
}

server {
  listen      443 ssl http2;
  listen      [::]:443 ssl http2;
  server_name APP_DOMAIN;
  root        /var/www/APPNAME/;

  # SSL
  # the specific details depend on your certificate.
  ssl_certificate /etc/nginx/ssl/APP_DOMAIN.pem;
  ssl_certificate_key /etc/nginx/ssl/APP_DOMAIN.key;
  ssl_session_timeout 5m;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;

  # logging
  access_log    /var/log/nginx/APPNAME-access.log;
  error_log     /var/log/nginx/APPNAME-error.log warn;

  # gzip
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

  # assets
  location ~* ^.+\.(jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|pdf|txt|tar|wav|bmp|rtf|eot|woff|ttf|svg|css|js|flv|swf|htm)$ {
    access_log off;

    # Control "Expires" and "Cache-Control" header fields to implement browser caching.
    # You also can set to 24h, 30d, modified +24h, max, off.
    # If your assets is named with unique hash or something, maybe set to max is a good choice.
    # See more http://nginx.org/en/docs/http/ngx_http_headers_module.html.
    expires max;
    try_files $uri $uri/ =404;
  }

  # Rewrite all not-found requests to index.html.
  # Useful for single page web application.
  location / {
    try_files $uri $uri/index.html /index.html =404;
  }

  # Rewrite all api requests to app upstream.
  location ^~ /api {
    try_files $uri @app;
  }

  # Reverse proxy
  location @app {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Nginx-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_cache_bypass $http_upgrade;

    proxy_pass  http://APPNAME_upstream;
  }

  # Setup 50x error page,
  # and rewrite 50x to default error page.
  error_page 502 504 /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}
