upstream app_upstream {
  server 127.0.0.1:8788;
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  # Force redirect http to https.
  if ($host = YOUR_APP_DOMAIN) {
    return 301 https://$host$request_uri;
  }

  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name   YOUR_APP_DOMAIN;
  root  /var/www/YOUR_APP_DOMAIN/public/;

  # SSL
  # If you use letsencrypt, the following contents will be managed by Certbot. See https://certbot.eff.org/ to get more details.
  ssl_certificate /etc/letsencrypt/live/YOUR_APP_DOMAIN/fullchain.pem; # will be managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/YOUR_APP_DOMAIN/privkey.pem; # will be managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # will be managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # will be managed by Certbot

  # logging
  access_log    /var/log/nginx/YOUR_APP_DOMAIN/access.log;
  error_log     /var/log/nginx/YOUR_APP_DOMAIN/error.log warn;

  # gzip
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

  # assets
  location ~* ^.+\.(jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|pdf|txt|tar|wav|bmp|rtf|eot|woff|ttf|svg|css|js|flv|swf|html|htm)$ {
    access_log off;

    # Control “Expires” and “Cache-Control” header fields to implement browser caching.
    # You also can set to 24h, modified +24h, max, off.
    # If your assets is named with unique hash or something, maybe set to max is a good choice.
    # See more http://nginx.org/en/docs/http/ngx_http_headers_module.html.
    expires 30d;

    try_files $uri $uri/ =404;
  }

  location /api {
    try_files @app;
  }

  location / {
    try_files $uri $uri/index.html /index.html @app;
  }

  # reverse proxy
  location @app {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Nginx-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_cache_bypass $http_upgrade;

    proxy_pass  $scheme://app_upstream;
  }
}

# Redirect www subdomain.
# server {
#   listen       :80;
#   listen       [::]:80;
#   server_name  www.YOUR_APP_DOMAIN;
#   return       301 https://YOUR_APP_DOMAIN$request_uri;
# }
